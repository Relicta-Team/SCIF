
#include "inp.h"

namespace(test,gvar_)


inline_macro
#define setting(a,b,c) [a,#b,c]
setting(1,2 + e,3);

inline_macro
#define test_val 2345
testvar_inline_macro = test_val;

outer_macro_call(1,5);

macro_func(ct_addProp,void(string,string))
#define var(_name,val) _buffer = [_name,val];
var(1 +3 * (1000),5 - (2/5-4)-4);

macro_func(cd_localCmdGetArgs,any())
#define arguments cd_internal_cmd_thisArguments
arguments;

enum(VideoSettings,VIDEO_SETTINGS_)
//val1
#define VIDEO_SETTINGS_MAX 1
//val 2
#define VIDEO_SETTINGS_MIN 0
enumend

macro_const(chat_hideCheckUpdate)
#define CHAT_HIDE_CHECK_UPDATE [2.5,-2,3,4]

/*
	This is a multiline comment
	Secondline
	//other comment
*/

decl(float(int;float)) testfunc = {
	params ["_a",["_b",5]];
	
	private _extended = 3 + 4 - (-2 * 5 / 10 + _b);
	// if (false) exitwith {_b = 1; _a};
	// if (true) then {
	// 	if (false) exitwith {_b = 4;_b};
	// 	//_b = (3 + _a) * 5.4;
	// };
	// _a = 5;
	// private _e = 4;
	// _e = _b;
	// _e
};

// if 

// (true ) then {a = 1; /*
// term

// */
	 
	 
// 	 b = 2};
// // lval_test; 1;
// //1
// //2
// decl(int) 
// //3
// gvar_int 
// = 
// 1 ;
//  gvar_float = 24	;
// decl(string) gvar_str = "hello world"
// ;
// decl(bool) gvar_bool = false

// ;

// while{true} do {};
// for "_i" from 1 to 100 do {};
// for "_i" from 1 to 5 step 1 do {};
// {
// 	a = 5
// } foreach undefvar_aslist;

// nonvar = 987.3;